
import javax.swing.AbstractButton;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author kyleq
 */
public class UserFeedback extends javax.swing.JFrame {

    private String databaseUrl = "jdbc:mysql://localhost:3306/hotel?zeroDateTimeBehavior=CONVERT_TO_NULL";
    private String username = "root";
    private String password = "wassim123";
    private HotelDatabaseManager hotelDBM = new HotelDatabaseManager(databaseUrl, username, password);
    
    private Guest guest = null;
    private User user = null;
    
    public UserFeedback(Guest guest, User user){
        this.guest=guest;
        this.user=user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ratingButtonGroup = new javax.swing.ButtonGroup();
        navPanel = new javax.swing.JPanel();
        hotelLabelImg = new javax.swing.JLabel();
        roomsButton = new javax.swing.JButton();
        servicesButton = new javax.swing.JButton();
        feedbackButon = new javax.swing.JButton();
        billsButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        guestName = new javax.swing.JLabel();
        headerPanel = new javax.swing.JPanel();
        feedbackHeader = new javax.swing.JLabel();
        lowerPanel = new javax.swing.JPanel();
        feedbackLabel = new javax.swing.JLabel();
        ratingsLabel = new javax.swing.JLabel();
        feedbackTextField = new javax.swing.JTextField();
        terribleRadioButton = new javax.swing.JRadioButton();
        poorRadioButton = new javax.swing.JRadioButton();
        fairRadioButton = new javax.swing.JRadioButton();
        goodRadioButton = new javax.swing.JRadioButton();
        awesomeRadioButton = new javax.swing.JRadioButton();
        submitButton = new javax.swing.JButton();
        notifLabel = new javax.swing.JLabel();
        feedbackCount = new javax.swing.JLabel();
        deleteFeedbackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("User Home");
        setResizable(false);

        navPanel.setBackground(new java.awt.Color(196, 167, 111));
        navPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        hotelLabelImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/hotel-label.png"))); // NOI18N

        roomsButton.setBackground(new java.awt.Color(88, 73, 16));
        roomsButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        roomsButton.setForeground(new java.awt.Color(255, 255, 255));
        roomsButton.setText("Chambres");
        roomsButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        roomsButton.setBorderPainted(false);
        roomsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomsButtonActionPerformed(evt);
            }
        });

        servicesButton.setBackground(new java.awt.Color(88, 73, 16));
        servicesButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        servicesButton.setForeground(new java.awt.Color(255, 255, 255));
        servicesButton.setText("Services");
        servicesButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        servicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesButtonActionPerformed(evt);
            }
        });

        feedbackButon.setBackground(new java.awt.Color(88, 73, 16));
        feedbackButon.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        feedbackButon.setForeground(new java.awt.Color(255, 255, 255));
        feedbackButon.setText("Feedback");
        feedbackButon.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        feedbackButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedbackButonActionPerformed(evt);
            }
        });

        billsButton.setBackground(new java.awt.Color(88, 73, 16));
        billsButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        billsButton.setForeground(new java.awt.Color(255, 255, 255));
        billsButton.setText("Factures");
        billsButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        billsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billsButtonActionPerformed(evt);
            }
        });

        logOutButton.setBackground(new java.awt.Color(88, 73, 16));
        logOutButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setText("Se d√©connecter");
        logOutButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        guestName.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        guestName.setForeground(new java.awt.Color(88, 73, 16));
        guestName.setText("guestName");
        guestName.setToolTipText("");

        javax.swing.GroupLayout navPanelLayout = new javax.swing.GroupLayout(navPanel);
        navPanel.setLayout(navPanelLayout);
        navPanelLayout.setHorizontalGroup(
            navPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navPanelLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(navPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guestName)
                    .addGroup(navPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(roomsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hotelLabelImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(servicesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(feedbackButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(billsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
        );
        navPanelLayout.setVerticalGroup(
            navPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(hotelLabelImg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(guestName)
                .addGap(33, 33, 33)
                .addComponent(roomsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(servicesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(feedbackButon, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(billsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        guestName.setText("Bonjour, " + guest.getFirstName());

        headerPanel.setBackground(new java.awt.Color(216, 196, 156));
        headerPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        feedbackHeader.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        feedbackHeader.setForeground(new java.awt.Color(88, 73, 16));
        feedbackHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        feedbackHeader.setText("FEEDBACK");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(feedbackHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(feedbackHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addContainerGap())
        );

        lowerPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        feedbackLabel.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        feedbackLabel.setText("Feedback:");

        ratingsLabel.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        ratingsLabel.setText("Notation");

        feedbackTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                feedbackTextFieldKeyTyped(evt);
            }
        });

        ratingButtonGroup.add(terribleRadioButton);
        terribleRadioButton.setText("Terrible");
        terribleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terribleRadioButtonActionPerformed(evt);
            }
        });

        ratingButtonGroup.add(poorRadioButton);
        poorRadioButton.setText("Pauvre");

        ratingButtonGroup.add(fairRadioButton);
        fairRadioButton.setText("Normal");

        ratingButtonGroup.add(goodRadioButton);
        goodRadioButton.setText("Bien");

        ratingButtonGroup.add(awesomeRadioButton);
        awesomeRadioButton.setText("Tr√©s bien");

        submitButton.setText("Mettre Feedback");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        notifLabel.setForeground(new java.awt.Color(255, 102, 102));
        notifLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        feedbackCount.setForeground(new java.awt.Color(255, 102, 102));
        feedbackCount.setText("0/100");

        deleteFeedbackButton.setText("Supprimer Feedback");
        deleteFeedbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFeedbackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lowerPanelLayout = new javax.swing.GroupLayout(lowerPanel);
        lowerPanel.setLayout(lowerPanelLayout);
        lowerPanelLayout.setHorizontalGroup(
            lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lowerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notifLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(feedbackTextField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lowerPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(feedbackCount))
                    .addGroup(lowerPanelLayout.createSequentialGroup()
                        .addGroup(lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lowerPanelLayout.createSequentialGroup()
                                .addComponent(terribleRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(poorRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(fairRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(goodRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(awesomeRadioButton))
                            .addComponent(ratingsLabel)
                            .addComponent(feedbackLabel))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(lowerPanelLayout.createSequentialGroup()
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteFeedbackButton, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)))
                .addContainerGap())
        );
        lowerPanelLayout.setVerticalGroup(
            lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lowerPanelLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(feedbackLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(feedbackTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(feedbackCount)
                .addGap(7, 7, 7)
                .addComponent(ratingsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(terribleRadioButton)
                    .addComponent(poorRadioButton)
                    .addComponent(fairRadioButton)
                    .addComponent(goodRadioButton)
                    .addComponent(awesomeRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notifLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteFeedbackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        if(hotelDBM.hasFeedback(guest.getGuestID())){
            feedbackTextField.setText(hotelDBM.retrieveGuestFeedback(guest.getGuestID()));
        }
        else{
            feedbackTextField.setText("");
        }
        if (hotelDBM.hasFeedback(guest.getGuestID())) {
            String guestRating = hotelDBM.retrieveGuestRating(guest.getGuestID());
            if ("Terrible".equals(guestRating)) {
                terribleRadioButton.setSelected(true);
            } else {
                terribleRadioButton.setSelected(false);
            }
        } else {
            terribleRadioButton.setSelected(false);
        }
        if (hotelDBM.hasFeedback(guest.getGuestID())) {
            String guestRating = hotelDBM.retrieveGuestRating(guest.getGuestID());
            if ("Poor".equals(guestRating)) {
                poorRadioButton.setSelected(true);
            } else {
                poorRadioButton.setSelected(false);
            }
        } else {
            poorRadioButton.setSelected(false);
        }
        if (hotelDBM.hasFeedback(guest.getGuestID())) {
            String guestRating = hotelDBM.retrieveGuestRating(guest.getGuestID());
            if ("Fair".equals(guestRating)) {
                fairRadioButton.setSelected(true);
            } else {
                fairRadioButton.setSelected(false);
            }
        } else {
            fairRadioButton.setSelected(false);
        }
        if (hotelDBM.hasFeedback(guest.getGuestID())) {
            String guestRating = hotelDBM.retrieveGuestRating(guest.getGuestID());
            if ("Good".equals(guestRating)) {
                goodRadioButton.setSelected(true);
            } else {
                goodRadioButton.setSelected(false);
            }
        } else {
            goodRadioButton.setSelected(false);
        }
        if (hotelDBM.hasFeedback(guest.getGuestID())) {
            String guestRating = hotelDBM.retrieveGuestRating(guest.getGuestID());
            if ("Awesome".equals(guestRating)) {
                awesomeRadioButton.setSelected(true);
            } else {
                awesomeRadioButton.setSelected(false);
            }
        } else {
            awesomeRadioButton.setSelected(false);
        }
        if(hotelDBM.hasFeedback(guest.getGuestID())){
            submitButton.setText("Update Feedback");
        }
        else{
            submitButton.setText("Submit Feedback");
        }
        feedbackCount.setText(feedbackTextField.getText().length() + "/100");
        if(hotelDBM.hasFeedback(guest.getGuestID())){
            deleteFeedbackButton.setEnabled(true);
        }
        else{
            deleteFeedbackButton.setEnabled(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(navPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void roomsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomsButtonActionPerformed
        UserRooms userRooms = new UserRooms(guest, user);
        userRooms.setVisible(true);
        dispose();
    }//GEN-LAST:event_roomsButtonActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        Login login = new Login();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void billsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billsButtonActionPerformed
        UserBills userBills = new UserBills(guest, user);
        
        userBills.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_billsButtonActionPerformed

    private void feedbackButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedbackButonActionPerformed
        UserFeedback userFeedback = new UserFeedback(guest, user);
        
        userFeedback.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_feedbackButonActionPerformed

    private void servicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesButtonActionPerformed
        UserServices userServices = new UserServices(guest, user);
        
        userServices.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_servicesButtonActionPerformed

    private void feedbackTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_feedbackTextFieldKeyTyped
        if (feedbackTextField.getText().length() >= 100) {
            evt.consume();
            feedbackCount.setText("100/100");
        }
        else{
            feedbackCount.setText(feedbackTextField.getText().length() + "/100");
        }
    }//GEN-LAST:event_feedbackTextFieldKeyTyped

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        String rating = "";
        String feedback = feedbackTextField.getText();
        
        if(terribleRadioButton.isSelected()){
            rating="Terrible";    
        }
        else if(poorRadioButton.isSelected()){
            rating="Pauvre";
        }
        else if(fairRadioButton.isSelected()){
            rating="Normal";
        }
        else if(goodRadioButton.isSelected()){
            rating="Bien";
        }
        else if(awesomeRadioButton.isSelected()){
            rating="Tr√©s bien";
        }
        
        if(!rating.isEmpty() && !feedback.isEmpty()){
            if(hotelDBM.hasFeedback(guest.getGuestID())){
                if(hotelDBM.updateFeedback(feedback, rating, guest.getGuestID())){
                    
                    notifLabel.setText("Feedback updated!");
                }
                else{
                    notifLabel.setText("Error occured!");
                }
            }
            else{
               if(hotelDBM.registerFeedback(feedback, rating, guest.getGuestID())){
                    notifLabel.setText("Feedback submitted!");
                    submitButton.setText("Update Feedback");
                    deleteFeedbackButton.setEnabled(true);
                }
                else{
                    notifLabel.setText("Error occured!");
                } 
            }
        }
        else{
            notifLabel.setText("Feedback must be filled/choose one rating!");
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void deleteFeedbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFeedbackButtonActionPerformed
        if(hotelDBM.removeFeedback(guest.getGuestID())){
            submitButton.setText("Submit Feedback");
            feedbackTextField.setText("");
            terribleRadioButton.setSelected(false);
            poorRadioButton.setSelected(false);
            fairRadioButton.setSelected(false);
            goodRadioButton.setSelected(false);
            awesomeRadioButton.setSelected(false);
            feedbackCount.setText("0/100");
            notifLabel.setText("Your feedback has been deleted!");
        }
        else{
            notifLabel.setText("You have no submitted feedback!");
        }
    }//GEN-LAST:event_deleteFeedbackButtonActionPerformed

    private void terribleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terribleRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_terribleRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton awesomeRadioButton;
    private javax.swing.JButton billsButton;
    private javax.swing.JButton deleteFeedbackButton;
    private javax.swing.JRadioButton fairRadioButton;
    private javax.swing.JButton feedbackButon;
    private javax.swing.JLabel feedbackCount;
    private javax.swing.JLabel feedbackHeader;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JTextField feedbackTextField;
    private javax.swing.JRadioButton goodRadioButton;
    private javax.swing.JLabel guestName;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel hotelLabelImg;
    private javax.swing.JButton logOutButton;
    private javax.swing.JPanel lowerPanel;
    private javax.swing.JPanel navPanel;
    private javax.swing.JLabel notifLabel;
    private javax.swing.JRadioButton poorRadioButton;
    private javax.swing.ButtonGroup ratingButtonGroup;
    private javax.swing.JLabel ratingsLabel;
    private javax.swing.JButton roomsButton;
    private javax.swing.JButton servicesButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JRadioButton terribleRadioButton;
    // End of variables declaration//GEN-END:variables
}
