/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author kyleq
 */

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class StaffServices extends javax.swing.JFrame {

    private String databaseUrl = "jdbc:mysql://localhost:3306/hotel?zeroDateTimeBehavior=CONVERT_TO_NULL";
    private String username = "root";
    private String password = "wassim123";
    private HotelDatabaseManager hotelDBM = new HotelDatabaseManager(databaseUrl, username, password);
    
    private Staff staff = null;
    private User user = null;
    
    public StaffServices(Staff staff, User user){
        this.staff=staff;
        this.user=user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        navPanel2 = new javax.swing.JPanel();
        hotelLabelImg = new javax.swing.JLabel();
        roomsButton = new javax.swing.JButton();
        servicesButton = new javax.swing.JButton();
        feedbackButon = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        staffNameLabel = new javax.swing.JLabel();
        bookingsButton = new javax.swing.JButton();
        checkInsButtons = new javax.swing.JButton();
        billsButton = new javax.swing.JButton();
        headerPanel = new javax.swing.JPanel();
        roomHeaderLabel = new javax.swing.JLabel();
        roomsLowerPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestsTable = new javax.swing.JTable();
        cancelRequestButton = new javax.swing.JButton();
        notifLabel = new javax.swing.JLabel();
        fulfillRequestBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("User Home");
        setResizable(false);

        navPanel2.setBackground(new java.awt.Color(196, 167, 111));
        navPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        hotelLabelImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/hotel-label.png"))); // NOI18N

        roomsButton.setBackground(new java.awt.Color(88, 73, 16));
        roomsButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        roomsButton.setForeground(new java.awt.Color(255, 255, 255));
        roomsButton.setText("Chambres");
        roomsButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        roomsButton.setBorderPainted(false);
        roomsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomsButtonActionPerformed(evt);
            }
        });

        servicesButton.setBackground(new java.awt.Color(88, 73, 16));
        servicesButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        servicesButton.setForeground(new java.awt.Color(255, 255, 255));
        servicesButton.setText("Services");
        servicesButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        servicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesButtonActionPerformed(evt);
            }
        });

        feedbackButon.setBackground(new java.awt.Color(88, 73, 16));
        feedbackButon.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        feedbackButon.setForeground(new java.awt.Color(255, 255, 255));
        feedbackButon.setText("Feedbacks");
        feedbackButon.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        feedbackButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedbackButonActionPerformed(evt);
            }
        });

        logOutButton.setBackground(new java.awt.Color(88, 73, 16));
        logOutButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setText("Se déconnecter");
        logOutButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        staffNameLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        staffNameLabel.setForeground(new java.awt.Color(88, 73, 16));
        staffNameLabel.setText("staffName");
        staffNameLabel.setToolTipText("");

        bookingsButton.setBackground(new java.awt.Color(88, 73, 16));
        bookingsButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        bookingsButton.setForeground(new java.awt.Color(255, 255, 255));
        bookingsButton.setText("Réservations");
        bookingsButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bookingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingsButtonActionPerformed(evt);
            }
        });

        checkInsButtons.setBackground(new java.awt.Color(88, 73, 16));
        checkInsButtons.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        checkInsButtons.setForeground(new java.awt.Color(255, 255, 255));
        checkInsButtons.setText("Enregistrements");
        checkInsButtons.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        checkInsButtons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInsButtonsActionPerformed(evt);
            }
        });

        billsButton.setBackground(new java.awt.Color(88, 73, 16));
        billsButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        billsButton.setForeground(new java.awt.Color(255, 255, 255));
        billsButton.setText("Factures");
        billsButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        billsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navPanel2Layout = new javax.swing.GroupLayout(navPanel2);
        navPanel2.setLayout(navPanel2Layout);
        navPanel2Layout.setHorizontalGroup(
            navPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navPanel2Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(navPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(billsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(staffNameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hotelLabelImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(servicesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(feedbackButon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookingsButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkInsButtons, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        navPanel2Layout.setVerticalGroup(
            navPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(hotelLabelImg)
                .addGap(18, 18, 18)
                .addComponent(staffNameLabel)
                .addGap(18, 18, 18)
                .addComponent(roomsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookingsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkInsButtons, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(servicesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(billsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(feedbackButon, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        staffNameLabel.setText("Bonjour, " + staff.getFirstName());

        headerPanel.setBackground(new java.awt.Color(216, 196, 156));
        headerPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        roomHeaderLabel.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        roomHeaderLabel.setForeground(new java.awt.Color(88, 73, 16));
        roomHeaderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        roomHeaderLabel.setText("SERVICES");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roomHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roomHeaderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                .addContainerGap())
        );

        roomsLowerPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        requestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Service ID", "Invitée", "Chambre No.", "Type Service", "Status", "Cout"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        requestsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(requestsTable);
        try (Connection connection = hotelDBM.getDatabaseConnection();
            PreparedStatement preparedStatement = connection.prepareStatement("SELECT request_service.request_id, guest.first_name, guest.last_name, booking.room_number, service.service_type, request_service.status, service.cost FROM request_service INNER JOIN service on request_service.service_id=service.service_id INNER JOIN check_in ON request_service.checkin_id = check_in.checkin_id INNER JOIN booking ON check_in.booking_id=booking.booking_id INNER JOIN guest ON booking.guest_id = guest.guest_id")) {

            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                String request_id = String.valueOf(resultSet.getInt("request_id"));
                String guest_name = resultSet.getString("first_name") + " " + resultSet.getString("last_name");
                String room_number = String.valueOf(resultSet.getInt("room_number"));
                String service_type = resultSet.getString("service_type");
                String status = resultSet.getString("status");
                String cost = resultSet.getString("cost");

                cost = cost +"0";

                String requestsTableData[] = {request_id, guest_name, room_number, service_type, status, cost};
                DefaultTableModel requestsTableModel = (DefaultTableModel) requestsTable.getModel();

                requestsTableModel.addRow(requestsTableData);
            }

            preparedStatement.close();
        }
        catch (SQLException e) {
            e.printStackTrace();
        }

        cancelRequestButton.setText("Cancel Request");
        cancelRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelRequestButtonActionPerformed(evt);
            }
        });

        notifLabel.setForeground(new java.awt.Color(255, 102, 102));
        notifLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        fulfillRequestBtn.setText("Fulfill Request");
        fulfillRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fulfillRequestBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roomsLowerPanelLayout = new javax.swing.GroupLayout(roomsLowerPanel);
        roomsLowerPanel.setLayout(roomsLowerPanelLayout);
        roomsLowerPanelLayout.setHorizontalGroup(
            roomsLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsLowerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roomsLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notifLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(roomsLowerPanelLayout.createSequentialGroup()
                        .addComponent(cancelRequestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fulfillRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        roomsLowerPanelLayout.setVerticalGroup(
            roomsLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsLowerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notifLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roomsLowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fulfillRequestBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelRequestButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(navPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roomsLowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomsLowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        Login login = new Login();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void feedbackButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedbackButonActionPerformed
        StaffFeedback staffFeedback = new StaffFeedback(staff, user);
        staffFeedback.setVisible(true);
        dispose();
    }//GEN-LAST:event_feedbackButonActionPerformed

    private void servicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_servicesButtonActionPerformed

    private void roomsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomsButtonActionPerformed

    private void bookingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingsButtonActionPerformed
        StaffBookings staffBookings = new StaffBookings(staff, user);
        staffBookings.setVisible(true);
        dispose();
    }//GEN-LAST:event_bookingsButtonActionPerformed

    private void checkInsButtonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInsButtonsActionPerformed
        StaffCheckIns staffCheckIns = new StaffCheckIns(staff, user);
        staffCheckIns.setVisible(true);
        dispose();
    }//GEN-LAST:event_checkInsButtonsActionPerformed

    private void billsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billsButtonActionPerformed
        StaffBills staffBills = new StaffBills(staff, user);
        staffBills.setVisible(true);
        dispose();
    }//GEN-LAST:event_billsButtonActionPerformed

    private void fulfillRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fulfillRequestBtnActionPerformed
        int selectedRowIndex = requestsTable.getSelectedRow();
        
        if (selectedRowIndex != -1) {
            String status = requestsTable.getValueAt(selectedRowIndex, 4).toString();
            String service_type = requestsTable.getValueAt(selectedRowIndex, 3).toString();
            Double cost = Double.parseDouble(requestsTable.getValueAt(selectedRowIndex, 5).toString().substring(1));
            int request_id = Integer.parseInt((String) requestsTable.getValueAt(selectedRowIndex, 0));
            
            if("Granted".equals(status)){
                notifLabel.setText("Request already granted!");
            }
            else if("Cancelled".equals(status)){
                notifLabel.setText("Can't process request as it is cancelled!");
            }
            else{
                if(hotelDBM.updateServiceRequest(request_id, "Granted")){
                    if(hotelDBM.addServiceCostToBill(request_id, cost)){
                        StaffServices staffServices = new StaffServices(staff, user);
                        staffServices.setVisible(true);
                        dispose();

                        JOptionPane.showMessageDialog(this, "Request successfully granted!", "Service Requests", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else{
                        notifLabel.setText("Error granting a request!");
                    }
                }
                else{
                    notifLabel.setText("Error granting a request!");
                }
            }
        }
        else {
            notifLabel.setText("Please select a request.");
        }
    }//GEN-LAST:event_fulfillRequestBtnActionPerformed

    private void cancelRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelRequestButtonActionPerformed
        int selectedRowIndex = requestsTable.getSelectedRow();
        
        if (selectedRowIndex != -1) {
            String status = requestsTable.getValueAt(selectedRowIndex, 4).toString();
            int request_id = Integer.parseInt((String) requestsTable.getValueAt(selectedRowIndex, 0));
            
            if("Cancelled".equals(status)){
                notifLabel.setText("Request already cancelled!");
            }
            else if("Granted".equals(status)){
                notifLabel.setText("Can't cancel request as it is granted!");
            }
            else{
                if(hotelDBM.updateServiceRequest(request_id, "Cancelled")){
                    StaffServices staffServices = new StaffServices(staff, user);
                    staffServices.setVisible(true);
                    dispose();

                    JOptionPane.showMessageDialog(this, "Request successfully cancelled!", "Service Requests", JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    notifLabel.setText("Error cancelling a request!");
                }
            }

        }
        else {
            notifLabel.setText("Please select a request.");
        }
    }//GEN-LAST:event_cancelRequestButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton billsButton;
    private javax.swing.JButton bookingsButton;
    private javax.swing.JButton cancelRequestButton;
    private javax.swing.JButton checkInsButtons;
    private javax.swing.JButton feedbackButon;
    private javax.swing.JButton fulfillRequestBtn;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel hotelLabelImg;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JPanel navPanel2;
    private javax.swing.JLabel notifLabel;
    private javax.swing.JTable requestsTable;
    private javax.swing.JLabel roomHeaderLabel;
    private javax.swing.JButton roomsButton;
    private javax.swing.JPanel roomsLowerPanel;
    private javax.swing.JButton servicesButton;
    private javax.swing.JLabel staffNameLabel;
    // End of variables declaration//GEN-END:variables
}
